var image,db,unixtime,utctime,tags,$textarea=$("#textarea"),$content2=$("#content2");document.addEventListener("deviceready",onDeviceReady,false);function onDeviceReady(){if(!window.sqlitePlugin.openDatabase){alert("We are sorry, but SQLite database is not supported by this browser!")}db=window.sqlitePlugin.openDatabase({name:"my.db"});db.executeSql("PRAGMA foreign_keys=true;",[],function(c){db.executeSql("PRAGMA foreign_keys;",[],function(d){console.log("PRAGMA res: "+JSON.stringify(d))})});db.transaction(b,errorCB,successCB);function b(c){console.log("populateDB started");c.executeSql("CREATE TABLE IF NOT EXISTS photo (photo_pk integer primary key asc, photopath text,utctime integer)");c.executeSql("CREATE TABLE IF NOT EXISTS  tag (tag_pk integer primary key asc, tagname text unique)");c.executeSql("CREATE TABLE IF NOT EXISTS mapper (map_id integer primary key asc, tag_fk integer,photo_fk integer, FOREIGN KEY (tag_fk) REFERENCES tag(tag_pk), FOREIGN KEY (photo_fk) REFERENCES photo(photo_pk))");console.log("tables created")}var a="SELECT tag.tag_pk,tag.tagname, COUNT(mapper.tag_fk) AS tagweight FROM tag JOIN mapper ON tag.tag_pk = mapper.tag_fk GROUP BY mapper.tag_fk;";queryDb(a)}function createTagCloud(r,t){var l=t.rows.length,n=$("#tagcloud"),f=$("#content1"),o,s="",m=0,u="",g=0,q=0,j=Number.MAX_VALUE,h=-Math.abs(Number.MAX_VALUE),d=["s1","s2","s3","s4","s5","s6","s7"],a=stddev(),b=0,p="",c,k;if(l===0){o="<p>You do not have any photo labels yet, so, let's start to get some!:)</p>";n.append(o);f.trigger("create")}j=parseFloat(j).toFixed(2);h=parseFloat(h).toFixed(2);for(k=0;k<l;k++){g=t.rows.item(k).tagweight;if(g<j){j=g}if(g>h){h=g}}for(k=0;k<l;k++){row=t.rows.item(k).tagweight;b+=a(row)}m=b/l;n.empty();for(k=0;k<l;k++){c=t.rows.item(k).tag_pk;u=t.rows.item(k).tagname;g=t.rows.item(k).tagweight;q=parseInt((g-j)/m);p=d[q];s+="<a href='#' id='"+c+"' class='"+p+" thumb ui-btn ui-btn-inline' onclick='displayPhoto(this.id);' >"+u+" ("+g+")</a>"}n.append(s);f.trigger("create")}function displayPhoto(c){var a=c,b="SELECT photo.photopath,photo.utctime FROM tag LEFT JOIN mapper ON mapper.tag_fk = tag.tag_pk JOIN photo ON photo.photo_pk = mapper.photo_fk WHERE tag.tag_pk=?;";queryDb2(b,a)}function queryDb(c,a){db.transaction(b(c,a),errorCB,successCB);function b(f,d){return function(g){g.executeSql(f,[],createTagCloud,errorCB)}}}function createThumbs(j,o){var a="",k=o.rows.length,b=$("#thumbs"),f="",g=0,m,c,l,h;b.empty();for(h=0;h<k;h++){f=o.rows.item(h).photopath;g=o.rows.item(h).utctime;m=new Date(g*1000);c=m.toLocaleString();a+="<li><img src data-src="+f+" width='80px' height='80px' class='ui-li-has-thumb'/>"+c+"</li>"}b.append(a);$(":mobile-pagecontainer").pagecontainer("change","#photolist");$("#photolist").trigger("pagecreate");b.listview({autodividers:true,autodividersSelector:function(d){l=new Date(d.text());return l.toLocaleDateString()}}).listview("refresh")}function errorCB(a){alert("Error processing SQL: "+a.message+"\nCode="+a.code)}function successCB(){console.log("db transaction has been successful!")}function stddev(){var c=0,a=0,b=0;return function(d){c++;a+=d;b+=d*d;return Math.sqrt((b/c)-Math.pow(a/c,2))}}function queryDb2(c,a){db.transaction(b(c,a),errorCB,successCB);function b(f,d){return function(g){g.executeSql(f,[d],createThumbs,errorCB)}}}$(document).on("pagecreate","#photolist",function(){$("li").on("click",function(){var a=$(this).children("img").attr("src"),b="image/jpeg";openFile(a,b)})});function onSuccess(b){image=document.getElementById("photo");image.src=b;getLocation();db.transaction(c,errorCB,a);function c(d){d.executeSql("INSERT INTO photo (photopath,utctime) VALUES(?,?)",[b,unixtime],function(f,g){})}function a(){console.log("success in saving photo metadata!")}}function onFail(a){alert("Failed because: "+a);remTags();$("#btnGroup").hide()}function getPhoto(){navigator.camera.getPicture(onSuccess,onFail,{quality:50,destinationType:Camera.DestinationType.FILE_URI,sourceType:Camera.PictureSourceType.CAMERA,encodingType:Camera.EncodingType.JPEG,correctOrientation:true,saveToPhotoAlbum:true})}function openFile(a,b){cordova.plugins.fileOpener2.open(a,b,{error:function(){alert("Error status: "+e.status+" - Error message: "+e.message)},success:function(){}})}function getLocation(){utctime=new Date();unixtime=Math.floor(Date.parse(utctime)/1000);$("#textarea").tagEditor({initialTags:[],maxTags:50,delimiter:",;",placeholder:"Enter or edit labels ...",removeDuplicates:true,forceLowercase:false});if(navigator.geolocation){navigator.geolocation.getCurrentPosition(c,b)}else{alert("Geolocation is not supported in your browser!")}function c(d){a(d.coords.latitude,d.coords.longitude)}function b(d){switch(d.code){case d.PERMISSION_DENIED:alert("Page does not have permission to use the Geolocation API!");break;case d.POSITION_UNAVAILABLE:alert("The position of the device could not be determined!");break;case d.TIME_OUT:alert("Timeout in retrieving the position!");break;default:alert("Unknown error has occured!");break}}function a(h,f){var g=new google.maps.Geocoder(),d=new google.maps.LatLng(h,f);g.geocode({latLng:d},function(j,i){if(i==google.maps.GeocoderStatus.OK){if(j[0]){var m=j[0].formatted_address,k=/(\\+|\/+|\d|\ - |\ \d|\-\d)/g,n=utctime.toLocaleDateString(),l;m+=","+n;l=m.replace(k,"");l+=utctime.getFullYear();console.log(l);$("#textarea").tagEditor("addTag",l)}else{alert("No google address returned")}}else{alert("Reverse Geocoding failed due to: "+i)}})}}function remTags(){var b=$("#textarea").tagEditor("getTags")[0].tags,a=b.length,c;if(a!=="null"||a!==""||a!=="undefined"){for(c=0;c<a;c++){$("#textarea").tagEditor("removeTag",b[c])}$("#textarea").tagEditor("destroy")}}function clearTags(){var b=$("#textarea").tagEditor("getTags")[0].tags,a=b.length,c;if(a!=="null"||a!==""||a!=="undefined"){for(c=0;c<a;c++){$("#textarea").tagEditor("removeTag",b[c])}}}function saveLabels(){db.transaction(c,errorCB,a);tags=$("#textarea").tagEditor("getTags")[0].tags;function c(f){var d=tags.length,g,h;if(d==="null"||d===""||d==="undefined"){alert("You don't have any tags! Please add some.")}for(g=0;g<d;g++){h=tags[g];f.executeSql("INSERT OR IGNORE INTO tag (tagname) VALUES(?)",[h],function(i,j){console.log("insertId: "+j.insertId+" tag name: "+h)})}b(tags,"INSERT INTO mapper (tag_fk,photo_fk) SELECT tag_pk,MAX(photo_pk) as maxid FROM tag,photo WHERE tag.tagname=?");remTags()}function a(){getPhoto();var d="SELECT tag.tagname, COUNT(mapper.tag_fk) AS tagweight FROM tag JOIN mapper ON tag.tag_pk = mapper.tag_fk GROUP BY mapper.tag_fk;";queryDb(d);remTags()}function b(d,h){for(var f=0;f<d.length;f++){db.transaction(g(d[f],h),errorCB)}function g(j,i){return function(k){k.executeSql(i,[j],function(l,m){},errorCB)}}}};